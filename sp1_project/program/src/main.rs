#! [no_main] sp1_zkvm :: entrypoint ! (main) ; use nalgebra :: Matrix2 ; fn main () { let iterations : u32 = sp1_zkvm :: io :: read () ; ; let other_input : f64 = sp1_zkvm :: io :: read () ; ; let answer = fibonacci (iterations) ; sp1_zkvm :: io :: commit (& answer) ; } fn fibonacci (n : u32) -> u64 { Matrix2 :: new (1 , 1 , 1 , 0) . pow (n - 1) [(0 , 0)] } fn input () -> u32 { 10 } fn other_input (n : usize) -> f64 { (2 * n) as f64 } fn other_host_function () -> f64 { 1.0 }